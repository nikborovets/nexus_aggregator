name: CI

env:
  # enable colored output
  PY_COLORS: 1

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  static:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
        enable-cache: true

    - name: Set up Python
      run: uv python install 3.13

    - name: Install dependencies
      run: uv sync --dev

    - name: Code quality checks
      run: |
        # Проверяем что код уже отформатирован (pre-commit должен был исправить)
        uv run ruff check src/ tests/ --no-fix
        uv run ruff format --check src/ tests/

    - name: Security checks
      run: |
        # Проверка уязвимостей в зависимостях
        uv run safety check --json || true

        # Проверка небезопасных практик в коде
        uv run bandit -r src/ -f json -o bandit-report.json || true

    - name: Run pre-commit
      run: uv run pre-commit run --all-files

  test:
    runs-on: ubuntu-latest
    needs: static

    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: nexus_test
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 3s
          --health-retries 3
        ports:
          - 5432:5432

    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
        enable-cache: true

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --dev

    - name: Test with pytest
      env:
        DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/nexus_test
      run: uv run pytest --cov=src --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.13'
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage.xml
        fail_ci_if_error: false

  docker:
    runs-on: ubuntu-latest
    needs: [static, test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      security-events: write

    steps:
    - uses: actions/checkout@v4
    # - name: Set up QEMU
    #   uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build test image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: false
        tags: nexus-aggregator:test
        target: test
        cache-from: type=gha
        cache-to: type=gha,mode=max
        load: true

    - name: Test Docker image
      run: docker run --rm nexus-aggregator:test pytest --cov=src --cov-report=xml

    - name: Build and scan production image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: false
        tags: nexus-aggregator:latest
        platforms: linux/amd64
        cache-from: type=gha
        cache-to: type=gha,mode=max
        load: true

    - name: Scan Docker image for vulnerabilities
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'nexus-aggregator:latest'
        format: 'table'

    # TODO: Добавить загрузку результатов в GitHub Security tab когда настроишь права
    # - name: Scan Docker image for vulnerabilities (SARIF)
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #     image-ref: 'nexus-aggregator:latest'
    #     format: 'sarif'
    #     output: 'trivy-results.sarif'
    #   continue-on-error: true
    #
    # - name: Upload Trivy scan results to GitHub Security tab
    #   uses: github/codeql-action/upload-sarif@v3
    #   if: ${{ hashFiles('trivy-results.sarif') != '' }}
    #   with:
    #     sarif_file: 'trivy-results.sarif'
    #   continue-on-error: true
